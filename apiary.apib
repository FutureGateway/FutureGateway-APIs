FORMAT: 1A

# FutureGateway APIs

FutureGateway APIs are a set of APIs designed to allow Science Gateways (SGs) to
interact with remote infrastructures. The APIs allow the administrator to manage
the infrastructures linked by the API server, and the user to interact with them.

APIs use a token to authenticate and authorise the users. The format is **JWT**
and it is released by a trust entity, generally a Science Gateway
or an application connected with it, which has the control on the user privileges.
The token will contain the user name and the associated roles. The APIs server
is able to validate the token autonomously and verify if the roles included are
enough for the requested operation.


# FutureGateway API Root [/]

This resource return the versions available in the server with the link to access them.

    It is recommend to follow the “url” link values,
    [Link](https://tools.ietf.org/html/rfc5988) or Location headers where
    applicable to retrieve resources. Instead of constructing your own URLs,
    to keep your client decoupled from implementation details.

## Retrieve the Entry Point [GET]

+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </>; rel="self", </v1.0>; rel="v1.0"

    + Body

            {
                "versions": [
                    {
                        "id": "v1.0",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0"
                            }
                        ],
                        "media-types": [
                            {
                                "type": "application/vnd.indigo-datacloud.apiserver+json",
                            }
                        ],
                        "status": "prototype",
                        "updated": "2015-08-30T00:00:00Z"
                    }
                ],
                "_links": [
                    {
                        "rel": "self",
                        "href": "/"
                    }
                ]
            }


## Group v1.0

The version 1.0 provides the minimum set of APIs to submit jobs in different infrastructures.
Several aspects will not be address in this version and will be integrated in future releases.

## Task Collection [/v1.0/tasks{?page}{?per_page}{?status}{?user}]

A *task* is any activity a user send to an infrastructure, such as a run a job in a grid computing
site or deploy a VM in a cloud.


+ Parameters
    + page: 1 (optional, number) - The page of tasks to return.
    + per_page: 20 (optional, number) - The number of tasks per page to return.
    + status: any (optional, string) - A filter to get only the tasks with the specified status.
    + user: any (optional, string) - A filter to get only the tasks submitted by
    + application: any (optional, string) - A filter to get only the tasks associated to
    a specific application.

### List all tasks [GET]

Retrieve the list of tasks submitted by the user defined in the token. The list includes all the
submitted tasks to the system. If the search has to be limited to a subset the attribute filter
has to be used.

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}


+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/tasks?page=1>; rel="self",</v1.0/tasks?page=2>; rel="next"

    + Body

            {
                "tasks": [
                    {
                        "id": "123",
                        "description": "This is my nice task 123",
                        "status": "WAITING",
                        "date": "2014-11-11T12:37:23.423Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/tasks/123"
                            }
                        ]
                    }.
                    {
                        "id": "456",
                        "description": "This is my nice task 456",
                        "status": "RUNNING",
                        "date": "2014-11-11T09:12:34.421Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/tasks/456"
                            }
                        ]
                    }.
                    {
                        "id": "789",
                        "description": "This is my nice task 789",
                        "status": "DONE",
                        "date": "2014-11-11T08:40:51.620Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/tasks/789"
                            }
                        ]
                    }
                ],
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/tasks?page=1",
                    },
                    {
                        "rel": "next",
                        "href": "/v1.0/tasks?page=2",
                    }
                ]
            }


### Create a task [POST]

Create a new task with the following attributes:

+ application (string) - Id of the application for the task. The application has to be
already registered in the server in order to generate the task;
+ arguments (array[string]) - Arguments to provide to the application;
+ input_files (array[object]) - Name of input file for the application. These should be provided
in order to make the task scheduled. If omitted the task is immediately ready to start.
+ output_files (array[string]) - List of output files produced by the application in addition to
the stdout and stderr.


The input files have to be submitted after the creation of the task. The status will be waiting until
a **POST** is performed of the input files. The URL to submit the files is returned in the **HTTP Header**
of the **POST** as **Link** with `rel="input"`.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
                "application": "543",
                "description": "This is my nice task",
                "arguments": [
                    "arg_1",
                    "arg_2",
                    "arg_3",
                    "arg_4"
                ],
                "input_files": [
                    {
                        "name": "my_matlab_file.m"
                    }
                ]
            }

+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Location: /v1.0/tasks/1234
            Link: </v1.0/tasks/1234/input>; rel="input", </v1.0/tasks/1234>; rel="self"

    + Body

            {
                "id": "1234",
                "application": "543",
                "description": "This is my nice task",
                "arguments": [
                    "arg_1",
                    "arg_2",
                    "arg_3",
                    "arg_4"
                ],
                "input_files": [
                    {
                        "name": "my_matlab_file.m",
                        "status": "NEEDED"
                    }
                ],
                "status": "WAITING",
                "user": "user_name"
                "date": "2014-11-11T12:12:00.421Z",
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/tasks/1234"
                    },
                    {
                        "rel": "input",
                        "href": "/v1.0/tasks/1234/input"
                    }
                ]

            }


### Replace the task list [PUT]

Replacing the full list of task is not acceptable. A bulk operation can be performed using the
**PATCH** method.

+ Response 405

    + Headers

            Allow: GET, POST, PATCH, DELETE

### Add multiple tasks to the list [PATCH]

Create a new task with the following attributes:

+ application (string) - Id of the application for the task. The application has to be
already registered in the server in order to generate the task;
+ arguments (array[string]) - Arguments to provide to the application;
+ input_files (array[string]) - Name of input files for the application. Files have to be provided
in order to make the task scheduled. If omitted the task is immediately ready to start.
+ output_files (array[string]) - List of output files produced by the application in addition to
the stdout and stderr.


The input files has to be submitted after the creation of the tasks. The status will be waiting until
a *POST* is performed of the input files.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
                "tasks": [
                    {
                        "application": "543",
                        "description": "This is my nice task",
                        "arguments": [
                            "arg_1",
                            "arg_2",
                            "arg_3",
                            "arg_4"
                        ],
                        "input_files": [
                            {
                                "name": "my_matlab_file.m"
                            }
                        ]
                    },
                    {
                        "application": "765",
                        "description": "This is my second task",
                        "arguments": [
                            "arg_1",
                            "arg_2",
                            "arg_3",
                            "arg_4"
                        ],
                        "input_files": [
                            {
                                "name": "my_gromacs_file.gromacs"
                            }
                        ]
                    }
                ]
            }

+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

    + Body

            {
                "tasks": [
                    {
                        "id": "1234",
                        "application": "543",
                        "description": "This is my nice task",
                        "arguments": [
                            "arg_1",
                            "arg_2",
                            "arg_3",
                            "arg_4"
                        ],
                        "input_files": [
                            {
                                "name": "my_matlab_file.m",
                                "status": "NEEDED"
                            }
                        ],
                        "status": "WAITING",
                        "user": "user_name"
                        "date": "2014-11-11T12:12:00.421Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/tasks/1234"
                            },
                            {
                                "rel": "input",
                                "href": "/v1.0/tasks/1234/input"
                            }
                        ]
                    },
                    {
                        "id": "1235",
                        "application": "765",
                        "description": "This is my second task",
                        "arguments": [
                            "arg_1",
                            "arg_2",
                            "arg_3",
                            "arg_4"
                        ],
                        "input_files": [
                            {
                                "name": "my_gromacs_file.gromacs",
                                "status": "NEEDED"
                            }
                        ],
                        "status": "WAITING",
                        "user": "user_name"
                        "date": "2014-11-11T12:12:00.421Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/tasks/1234"
                            },
                            {
                                "rel": "input",
                                "href": "/v1.0/tasks/1234/input"
                            }
                        ]
                    }
                ]
            }


### Delete the task list [DELETE]

Remove all tasks

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}

+ Response 204

+ Response 403

        User is not allow to remove the task list

+ Response 404

        No tasks found


## Task [/v1.0/tasks/{task_id}]

A Task object has the following attributes:

+ id - The id of the task.
+ date - An ISO8601 date when the task was created.
+ last_change - An ISO8601 date when the task status was updated.
+ application - The id of the application associated with the task.
+ description - A user provided description of the task.
+ status - The current status of the task. Possible values are:
    - **WAITING**: Task created but input still required
    - **READY**: Task ready to be scheduled to the infrastructure
    - **SCHEDULED**: Task ready to execute in the selected infrastructure
    - **RUNNING**: In execution
    - **DONE**: Task completed
    - **ABORTED**: Some error prevent the task from the execution
    - **CANCELLED**: Task deleted by the user
+ user - The user name submitting the task. This is retrieved from the token and if
provided has to coincide.
+ arguments (array[string]) - Arguments to provide to the application.
+ input_files (array[string] | array[object]) - Input file for the application.
When the task is create a list of filename is provided as input_files. These files
have to be uploaded in order to make the task `SCHEDULED`. The task detail provide
an object for the each input file with the attributes: **name** and **status**.
The **status** can be `NEEDED` if the input file has not been provided or `READY`
otherwise.
+ output_files (array[string] | array[object]) - Output files of the application.
During the task creation the user can specify a list of files to retrieve after
the execution. The task details provide an a object for each output file containing
the name and the URL for download.
+ runtime_data (array[object]) - Information of the running task provided back to
the user. This is needed to allow users to interact with the application. As an
example, for a task running a VM the runtime_data can contains the ip address
and the credentials. The format is similar to parameters with the addition of
two optional time fields: *creation* and *last_change*.

+ Parameters
    + task_id: 1234 (required, string) - ID of the Task

### View a Tasks Details [GET]

Retrieves the details of the specified task.

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/tasks/1234>; rel="self"

    + Body

            {
                "id": "1234",
                "application": "543",
                "description": "This is my nice task",
                "arguments": [
                    "arg_1",
                    "arg_2",
                    "arg_3",
                    "arg_4"
                ],
                "input_files": [
                    {
                        "name": "my_matlab_file.m",
                        "status": "READY"
                    }
                ],
                "status": "RUNNING",
                "user": "user_name",
                "runtime_data": [
                    {
                        "name": "data_1",
                        "value": "value_1",
                        "description": "This define something",
                        "creation" : "2014-11-11T12:12:00.421Z",
                        "last_change": "2014-11-11T12:12:01.352Z"
                    },
                    {
                        "name": "data_2",
                        "value": "value_2"
                    }
                ]
                "date": "2014-11-11T12:12:00.421Z",
                "last_change": "2014-11-11T12:12:00.421Z",
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/tasks/1234"
                    }
                ]

            }


### Create a new task [PUT]

This method will create a new task with a specific `ID` assigned by the user. If the
`id` already exist the task is not modified but an error is returned to the user because
the tasks are mot modifiable but only some parameters which have specific APIs for
their update.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
                "id": "1234",
                "application": "543",
                "description": "This is my nice task",
                "arguments": [
                    "arg_1",
                    "arg_2",
                    "arg_3",
                    "arg_4"
                ],
                "input_files": [
                    {
                        "name": "my_matlab_file.m"
                    }
                ],
                "output_files": [
                    {
                        "name": "mydata.csv"
                    }
                ]
            }

+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Location: /v1.0/tasks/1234
            Link: </v1.0/tasks/1234/input>; rel="input", </v1.0/tasks/1234>; rel="self"

    + Body

            {
                "id": "1234",
                "application": "543",
                "description": "This is my nice task",
                "arguments": [
                    "arg_1",
                    "arg_2",
                    "arg_3",
                    "arg_4"
                ],
                "input_files": [
                    {
                        "name": "my_matlab_file.m",
                        "status": "NEEDED"
                    }
                ],
                "output_files": [
                    {
                        "name": "mydata.csv",
                        "url": null
                    }
                ]
                "status": "WAITING",
                "user": "user_name"
                "date": "2014-11-11T12:12:00.421Z",
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/tasks/1234"
                    },
                    {
                        "rel": "input",
                        "href": "/v1.0/tasks/1234/input"
                    }
                ]

            }


+ Response 403

        Users should not be able to update entirely the task after the submission. APIs for some values, like
        the description, are provided.


### Delete a task [DELETE]

+ Request

    + Headers

            Authorization: Bearer {access_token}

+ Response 204

+ Response 403

        User is not allow to remove the task list

+ Response 404

        No tasks found


## Application Collection [/v1.0/applications{?page}{?per_page}]

The *application* represents the entity a user can submit to a remote infrastructure. This can
be a Job in a computing grid, a VM in a cloud or other. The definition includes also the
infrastructures where they can be submitted.

+ Parameters
    + page: 1 (optional, number) - The page of tasks to return;
    + per_page: 20 (optional, number) - The number of tasks per page to return.


### List all applications [GET]

Retrieve the list of applications the user is enabled to access.

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}


+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/applications?page=1>; rel="self",</v1.0/applications?page=2>; rel="next"

    + Body

            {
                "applications": [
                    {
                        "id": "123",
                        "name": "app1",
                        "infrastructures": ["id_infra_1"],
                        "date": "2015-05-11T12:12:00.421Z",
                        "enabled": true,
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/applications/123"
                            }
                        ]
                    }.
                    {
                        "id": "456",
                        "name": "app2",
                        "infrastructures": ["id_infra_2"],
                        "date": "2015-07-15T16:12:20.537Z",
                        "enabled": true,
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/applications/456"
                            }
                        ]
                    }.
                    {
                        "id": "789",
                        "name": "app3",
                        "infrastructures": ["id_infra_3"],
                        "date": "2015-11-11T18:42:32.289Z",
                        "enabled": false,
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/applications/789"
                            }
                        ]
                    }
                ],
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/applications?page=1",
                    },
                    {
                        "rel": "next",
                        "href": "/v1.0/applications?page=2",
                    }
                ]
            }


### Add a new application [POST]

Add a new application using the following attributes:
+ description - A verbose description of the application.
+ name - User friendly name of the application.
+ infrastructures - A list of infrastructure ids associated with the application.
+ enabled (boolean) - `true` if the users, having the right, can execute the application,
`false` otherwise.
+ parameters (array[object]) - Parameters to set-up for the execution environment. Each parameter
contains different attributes defined by the context and may vary from application to application.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
              "name": "my_app",
              "description": "This is the app: my_app",
              "infrastructures": ["id_infra_2"],
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "enabled": true
              }

+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Location: /v1.0/applications/456
            Link: </v1.0/applications/456>; rel="self"

    + Body

            {
              "id": "456",
              "name": "my_app",
              "description": "This is the app: my_app",
              "infrastructures": ["id_infra_2"],
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "date": "2014-11-11T12:12:00.421Z",
              "enabled": true,
              "_links": [
                  {
                      "rel": "self",
                      "href": "/v1.0/applications/456"
                  }
              ]
            }


+ Response 403

        This operation is allowed only to the administrators


### Remove all applications [DELETE]

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}

+ Response 204

+ Response 403

        User is not allow to remove the applications list

+ Response 404

        No applications found



## Application [/v1.0/applications/{application_id}]

An application object has the following attributes:

+ id - The id of the application.
+ description - A verbose description of the application.
+ name - User friendly name of the application.
+ date - An ISO8601 date when the application was created.
+ infrastructures - A list of infrastructure ids associated with the application.
+ enabled (boolean) - `true` if the users, having the right, can execute the application,
`false` otherwise.
+ parameters (array[object]) - Parameters to set-up for the execution environment. Each parameter
contains different attributes defined by the context and may vary from application to application.

+ Parameters
    + application_id: 1234 (required, string) - ID of the Application

### View an Application Details [GET]

Retrieves the details of the specified application.

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/applications/1234>; rel="self"

    + Body

            {
                "id": "1234",
                "name": "app3",
                "description": "This is the app: app3",
                "infrastructures": ["id_infra_3"],
                "parameters": [
                  {
                    "name": "param_1",
                    "value": "value_1",
                    "description": "This define something"
                  },
                  {
                    "name": "param_2",
                    "value": "value_2"
                  }
                ],
                "date": "2014-11-11T12:12:00.421Z",
                "enabled": true,
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/applications/1234"
                    }
                ]
            }


### Update an Application [PUT]

Add a new application or modifying an existing one, using the following attributes:
+ description - A verbose description of the application.
+ name - User friendly name of the application.
+ infrastructures - The id of the infrastructure associated with the application.
+ enabled (boolean) - `true` if the users, having the right, can execute the application,
`false` otherwise.
+ parameters (array[object]) - Parameters to set-up for the execution environment. Each parameter
contains different attributes defined by the context and may vary from application to application.

The creation date cannot be modified by the user.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
              "id": "1234",
              "name": "my_app",
              "description": "This is the app: my_app",
              "infrastructures": ["id_infra_2"],
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "enabled": true
              }

+ Response 200

        Application updated correctly.


+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

        Application was not existing so it is created

    + Headers

            Location: /v1.0/applications/1234
            Link: </v1.0/applications/1234>; rel="self"

    + Body

            {
              "id": "1234",
              "name": "my_app",
              "description": "This is the app: my_app",
              "infrastructures": ["id_infra_2"],
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "date": "2014-11-11T12:12:00.421Z",
              "enabled": true,
              "_links": [
                  {
                      "rel": "self",
                      "href": "/v1.0/applications/1234"
                  }
              ]
            }


+ Response 403

        This operation is allowed only to the administrators


### Delete an application [DELETE]

+ Request

    + Headers

        Authorization: Bearer {access_token}

+ Response 204

+ Response 403

        User is not allow to remove the application

+ Response 404

        No applications found


## Infrastructure Collection [/v1.0/infrastructures{?page}{?per_page}]

The *infrastructure* represents the remote facility where applications can
execute. Each infrastructure contains all the properties used by **jSAGA** to
submit a job (a SAGA job in this context is not limited to grid job but can also
be the instantiation of a VM, the access to a remote cluster and so on).


### List all infrastructures [GET]

Retrieve the list of infrastructures where applications can be granted to execute.

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}


+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/infrastructures?page=1>; rel="self",</v1.0/infrastructures?page=2>; rel="next"

    + Body

            {
                "infrastructures": [
                    {
                        "id": "123",
                        "name": "infra1",
                        "date": "2015-08-11T12:12:00.421Z",
                        "enabled": true,
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/infrastructures/123"
                            }
                        ]
                    }.
                    {
                        "id": "456",
                        "name": "infra2",
                        "date": "2015-08-14T16:37:34.563Z",
                        "enabled": false,
                        "_links": [
                            {
                                "rel": "self",
                                "href": "/v1.0/infrastructures/456"
                            }
                        ]
                    }
                ],
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/infrastructures?page=1",
                    },
                    {
                        "rel": "next",
                        "href": "/v1.0/infrastructures?page=2",
                    }
                ]
            }


### Add a new infrastructure [POST]

Add a new infrastructure using the following attributes:
+ name - User friendly name of the infrastructure.
+ description - A verbose description of the application.
+ enabled (boolean) - `true` if the infrastructure is accessible, `false` otherwise.
+ parameters (array[object]) - Parameters to access the infrastructure using SAGA.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
              "name": "infra_x",
              "description": "This is the new infra_x",
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "enabled": true
              }

+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Location: /v1.0/infrastructures/456
            Link: </v1.0/infrastructures/456>; rel="self"

    + Body

            {
              "id": "456",
              "name": "infra_x",
              "description": "This is the new infra_x",
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "date": "2015-08-11T12:12:00.421Z",
              "enabled": true,
              "_links": [
                  {
                      "rel": "self",
                      "href": "/v1.0/infrastructures/456"
                  }
              ]
            }


+ Response 403

        This operation is allowed only to the administrators


### Remove all applications [DELETE]

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}

+ Response 204

+ Response 403

        User is not allow to remove the applications list

+ Response 404

        No applications found


## Infrastructure [/v1.0/infrastructures/{infrastructure_id}]

An infrastructure object has the following attributes:

+ id - The id of the application.
+ name - User friendly name of the infrastructure.
+ description - A verbose description of the application.
+ date - An ISO8601 date when the infrastructure was created.
+ enabled (boolean) - `true` if the infrastructure is accessible, `false` otherwise.
+ parameters (array[object]) - Parameters to access the infrastructure using SAGA.

*Note: Different infrastructures may have different parameters*.

+ Parameters
    + infrastructure_id: 1234 (required, string) - ID of the Infrastructure

### View an Infrastructure Details [GET]

Retrieves the details of the specified infrastructure.

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/infrastructures/1234>; rel="self"

    + Body

            {
                "id": "1234",
                "name": "infra_x",
                "description": "This is the new infra_x",
                "parameters": [
                  {
                    "name": "param_1",
                    "value": "value_1",
                    "description": "This define something"
                  },
                  {
                    "name": "param_2",
                    "value": "value_2"
                  }
                ],
                "date": "2015-08-11T12:12:00.421Z",
                "enabled": true,
                "_links": [
                    {
                        "rel": "self",
                        "href": "/v1.0/infrastructures/1234"
                    }
                ]
            }


### Update an Infrastructure [PUT]

Add a new infrastructure or modifying an existing one, using the following attributes:
+ description - A verbose description of the application.
+ name - User friendly name of the application.
+ enabled (boolean) - `true` if the users, having the right, can execute the application,
`false` otherwise.
+ parameters (array[object]) - Parameters to set-up for the execution environment. Each parameter
contains different attributes defined by the context and may vary from application to application.

The creation date cannot be modified by the user.

+ Request (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
              "id": "1234",
              "name": "infra_x",
              "description": "This is the new infra_x",
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "enabled": true
              }

+ Response 200

        Application updated correctly.


+ Response 201 (application/vnd.indigo-datacloud.apiserver+json)

        Application was not existing so it is created

    + Headers

            Location: /v1.0/infrastructures/1234
            Link: </v1.0/infrastructures/1234>; rel="self"

    + Body

            {
              "id": "1234",
              "name": "infra_x",
              "description": "This is the new infra_x",
              "parameters": [
                {
                  "name": "param_1",
                  "value": "value_1",
                  "description": "This define something"
                },
                {
                  "name": "param_2",
                  "value": "value_2"
                }
              ],
              "date": "2014-11-11T12:12:00.421Z",
              "enabled": true,
              "_links": [
                  {
                      "rel": "self",
                      "href": "/v1.0/infrastructures/1234"
                  }
              ]
            }


+ Response 403

        This operation is allowed only to the administrators


### Delete an application [DELETE]

+ Request

    + Headers

        Authorization: Bearer {access_token}

+ Response 204

+ Response 403

        User is not allow to remove the application

+ Response 404

        No applications found




## Roles Collection [/v1.0/roles{?page}{?per_page}]

Roles should define who is authorised to execute an application. This need some investigation
because the information should be in agreement with the service managing the user access (in
the majority of the cases the SG).


### List all roles [GET]

Retrieve the list of roles

+ Request Auth

    + Headers

            Authorization: Bearer {access_token}


+ Response 200 (application/vnd.indigo-datacloud.apiserver+json)

    + Headers

            Link: </v1.0/roles?page=1>; rel="self",</v1.0/roles?page=2>; rel="next"

    + Body

            {
            }
